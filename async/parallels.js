// Параллельное выполнение

// Что, если мы хотим осуществить несколько асинхронных процессов одновременно и обработать их результат?

// Вызов Promise.all(iterable) получает массив (или другой итерируемый объект) промисов и возвращает промис, который ждёт, 
// пока все переданные промисы завершатся, и переходит в состояние «выполнено» с массивом их результатов.

// Чтобы загрузить их параллельно, нужно:

// Создать для каждого URL соответствующий промис.
// Обернуть массив таких промисов в Promise.all.
// Получится так:

let urls = [
  '/article/promise/user.json',
  '/article/promise/guest.json'
];

Promise.all( urls.map(httpGet) )
  .then(results => {
    console.log(results);
  });

// Заметим, что если какой-то из промисов завершился с ошибкой, то результатом Promise.all будет эта ошибка. 
// При этом остальные промисы игнорируются.  
